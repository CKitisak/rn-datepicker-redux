// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "padding": 15,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 15,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      Datetime:
    </Text>
    <View>
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "borderColor": "#999",
                "borderWidth": 1,
                "height": 40,
                "padding": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#ccc",
                }
              }
            >
              
            </Text>
          </View>
        </View>
        <Modal
          animationType="fade"
          hardwareAccelerated={false}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "backgroundColor": "rgba(0,0,0,0.3)",
                  "flex": 1,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#fff",
                "bottom": 0,
                "height": 250,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "shadowColor": "#444",
                "shadowOpacity": 0.5,
                "shadowRadius": 5,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#888",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 20,
                    "paddingVertical": 15,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#999",
                    }
                  }
                >
                  CANCEL
                </Text>
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 15,
                    "paddingVertical": 10,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#0080c0",
                    }
                  }
                >
                  OK
                </Text>
              </View>
            </View>
            <View
              style={undefined}
            >
              <RCTDatePicker
                date={1499137279504}
                maximumDate={undefined}
                minimumDate={undefined}
                minuteInterval={undefined}
                mode="datetime"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
                timeZoneOffsetInMinutes={undefined}
              />
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "marginBottom": 15,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      Date:
    </Text>
    <View>
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "borderColor": "#999",
                "borderWidth": 1,
                "height": 40,
                "padding": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#ccc",
                }
              }
            >
              
            </Text>
          </View>
        </View>
        <Modal
          animationType="fade"
          hardwareAccelerated={false}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "backgroundColor": "rgba(0,0,0,0.3)",
                  "flex": 1,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#fff",
                "bottom": 0,
                "height": 250,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "shadowColor": "#444",
                "shadowOpacity": 0.5,
                "shadowRadius": 5,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#888",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 20,
                    "paddingVertical": 15,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#999",
                    }
                  }
                >
                  CANCEL
                </Text>
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 15,
                    "paddingVertical": 10,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#0080c0",
                    }
                  }
                >
                  OK
                </Text>
              </View>
            </View>
            <View
              style={undefined}
            >
              <RCTDatePicker
                date={1499137279532}
                maximumDate={undefined}
                minimumDate={undefined}
                minuteInterval={undefined}
                mode="date"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
                timeZoneOffsetInMinutes={undefined}
              />
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "marginBottom": 15,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
    >
      Time:
    </Text>
    <View>
      <View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Object {
                "borderColor": "#999",
                "borderWidth": 1,
                "height": 40,
                "padding": 10,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#ccc",
                }
              }
            >
              
            </Text>
          </View>
        </View>
        <Modal
          animationType="fade"
          hardwareAccelerated={false}
          transparent={true}
          visible={false}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hasTVPreferredFocus={undefined}
            hitSlop={undefined}
            isTVSelectable={true}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                Object {
                  "backgroundColor": "rgba(0,0,0,0.3)",
                  "flex": 1,
                },
              ]
            }
            testID={undefined}
            tvParallaxProperties={undefined}
          >
            <View />
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#fff",
                "bottom": 0,
                "height": 250,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "shadowColor": "#444",
                "shadowOpacity": 0.5,
                "shadowRadius": 5,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomColor": "#888",
                  "borderBottomWidth": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 20,
                    "paddingVertical": 15,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#999",
                    }
                  }
                >
                  CANCEL
                </Text>
              </View>
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                    "paddingHorizontal": 15,
                    "paddingVertical": 10,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Object {
                      "color": "#0080c0",
                    }
                  }
                >
                  OK
                </Text>
              </View>
            </View>
            <View
              style={undefined}
            >
              <RCTDatePicker
                date={1499137279551}
                maximumDate={undefined}
                minimumDate={undefined}
                minuteInterval={undefined}
                mode="time"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "height": 216,
                  }
                }
                timeZoneOffsetInMinutes={undefined}
              />
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#0080c0",
        "borderColor": "#0073ac",
        "borderRadius": 10,
        "borderWidth": 2,
        "justifyContent": "center",
        "opacity": 1,
        "paddingHorizontal": 10,
        "paddingVertical": 5,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#eee",
          "fontSize": 18,
          "fontWeight": "bold",
        }
      }
    >
      Submit
    </Text>
  </View>
</View>
`;
